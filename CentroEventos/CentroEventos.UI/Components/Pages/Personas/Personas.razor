@page "/Personas"
@rendermode InteractiveServer
@inject AgregarPersonaUseCase AgregarPersonaUseCase
@inject EliminarPersonaUseCase EliminarPersonaUseCase
@inject ModificarPersonaUseCase ModificarPersonaUseCase
@inject ServicioAutorizacion servicioAutorizacion
@inject ListarPersonasUseCase ListarPersonasUseCase
@inject ListarReservasUseCase ListarReservasUseCase
@inject ListarEventosDeportivosUseCase ListarEventosDeportivosUseCase
<EliminarEntidad @ref="eliminar" OnConfirmado="()=>Eliminar(PerElim ?? new Persona(0))" Mensaje="@msg"/>
<PageTitle>Personas</PageTitle>
<h1>Personas</h1>
<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>DNI</th>
            <th>NOMBRE</th>
            <th>APELLIDO</th>
            <th>EMAIL</th>
            <th>TELEFONO</th>
            <th>ACCION</th>
            <td>
                <select @onchange="FiltrarPorEvento">
                    <option value="Mostrar Todos">Mostrar Todos</option>
                    @foreach(var evento in listaEventos)
                    {
                        <option value="@evento.Nombre">@evento.Nombre</option>
                    }
                </select>
            </td>
        </tr>
    </thead>
    <tbody>
        @foreach(var p in _lista)
        {
            <tr>
                <td>@p.ID</td>
                <td>@p.DNI</td>
                <td>@p.Nombre</td>
                <td>@p.Apellido</td>
                <td>@p.Email</td>
                <td>@p.Telefono</td>
                <td>
                    @if(servicioAutorizacion.PoseeElPermiso(Usuario.s_Actual != null? Usuario.s_Actual.ID:0 ,Permiso.PersonaModificacion)){
                        <button class="btn btn-primary" @onclick="()=>Editar(p)">Editar</button>
                    }
                    @if(servicioAutorizacion.PoseeElPermiso(Usuario.s_Actual != null? Usuario.s_Actual.ID:0 ,Permiso.PersonaBaja)){
                        <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(p)">Eliminar</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @if(servicioAutorizacion.PoseeElPermiso(Usuario.s_Actual != null? Usuario.s_Actual.ID:0 ,Permiso.PersonaAlta)){
       <button class="btn btn-primary" @onclick="Agregar">Agregar Persona</button>
    }
    <EditarPersona @ref="editar" OnPersonaAgregada="RefrescarLista" />
</div>
@code {
    string eventoSeleccionado = "Mostrar Todos";

    List<Persona> _lista=new List<Persona>();
    List<EventoDeportivo> listaEventos=null!;
    protected override void OnInitialized()
    {
        listaEventos=ListarEventosDeportivosUseCase.Ejecutar();
        _lista=ListarPersonasUseCase.Ejecutar();
        StateHasChanged();
    }
    EditarPersona editar=null!;
    EliminarEntidad eliminar=null!;
    Persona? PerElim {get;set;}
    string msg {get;set;} = "";
    public void Agregar()
    {
        editar.Mostrar(true);
        StateHasChanged();
    }
    public void Editar(Persona p)
    {
        editar.Mostrar(false,p);
        StateHasChanged();
    }
    public void ConfirmarEliminacion(Persona p)
    {
        msg =$"Â¿Desea eliminar a la persona {p.Nombre} {p.Apellido}?";
        PerElim = p;
        eliminar.Mostrar(false);
    }
    private void Eliminar(Persona p)
    {
        try
        {
            EliminarPersonaUseCase.Ejecutar(Convert.ToInt32(p.ID),Usuario.s_Actual!=null? Usuario.s_Actual.ID:0);
        }
        catch(FalloAutorizacionException e)
        {
            msg=e.Message;
            eliminar.Mostrar(true);
        }
        catch(Exception e)
        {
            msg=e.Message;
            eliminar.Mostrar(true);
        }
        _lista = ListarPersonasUseCase.Ejecutar();
    }
    private async Task FiltrarPorEvento(ChangeEventArgs e)
    {
        eventoSeleccionado = e.Value?.ToString() ?? "Mostrar Todos";

        if (eventoSeleccionado == "Mostrar Todos")
        {
            _lista = ListarPersonasUseCase.Ejecutar();
        }
        else
        {
            var reservas = ListarReservasUseCase.Ejecutar();
            var evento = listaEventos.FirstOrDefault(ev => ev.Nombre == eventoSeleccionado);
            if (evento != null)
            {
                var idsPersonas = reservas.Where(r => r.EventoDeportivoId == evento.ID).Select(r => r.PersonaId).Distinct().ToList();
                var todasLasPersonas = ListarPersonasUseCase.Ejecutar();
                _lista = todasLasPersonas.Where(p => idsPersonas.Contains(p.ID.Value)).ToList();
            }
        }
        StateHasChanged();
    }
    void RefrescarLista()
    {
        if (eventoSeleccionado == "Mostrar Todos")
        {
            _lista = ListarPersonasUseCase.Ejecutar();
        }
        else
        {
            var reservas = ListarReservasUseCase.Ejecutar();
            var evento = listaEventos.FirstOrDefault(ev => ev.Nombre == eventoSeleccionado);
            if (evento != null)
            {
                var idsPersonas = reservas.Where(r => r.EventoDeportivoId == evento.ID).Select(r => r.PersonaId).Distinct().ToList();
                _lista = ListarPersonasUseCase.Ejecutar().Where(p => idsPersonas.Contains(p.ID.Value)).ToList();
            }
        }
        StateHasChanged();
    }

}
