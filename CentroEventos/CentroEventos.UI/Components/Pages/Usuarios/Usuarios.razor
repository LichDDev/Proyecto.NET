@page "/Usuarios"
@rendermode InteractiveServer
@inject AgregarUsuarioUseCase AgregarUsuarioUseCase
@inject EliminarUsuarioUseCase EliminarUsuarioUseCase
@inject ModificarUsuarioUseCase ModificarUsuarioUseCase
@inject ServicioAutorizacion servicioAutorizacion
@inject ListarUsuariosUseCase ListarUsuariosUseCase
<EliminarEntidad @ref="eliminar" OnConfirmado="()=>Eliminar(UserElim ?? new Usuario(0))" Mensaje="@msg"/>
<PageTitle>Usuarios</PageTitle>
<h1>Usuarios</h1>
<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>NOMBRE</th>
            <th>APELLIDO</th>
            <th>EMAIL</th>
            <th>CONTRASEÑA</th>
            <th>Accion</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var u in _lista)
        {
            <tr>
                <td>@u.ID</td>
                <td>@u.Nombre</td>
                <td>@u.Apellido</td>
                <td>@u.Email</td>
                <td>@u.Contraseña</td>
                <td>
                    @if(true || u.ID != (Usuario.s_Actual!=null ? Usuario.s_Actual.ID:0) || u.ID!=1)
                    {
                        @if(servicioAutorizacion.PoseeElPermiso(Usuario.s_Actual != null? Usuario.s_Actual.ID:0 ,Permiso.UsuarioModificacion)){
                            <button class="btn btn-primary" @onclick="()=>Editar(u)">Editar</button>
                            <button  class="btn btn-primary" @onclick="()=>MostrarPermisos(u)">Permisos</button>
                            <EditarPermisos @ref="editarPermisos"/>
                        }
                        @if(servicioAutorizacion.PoseeElPermiso(Usuario.s_Actual != null? Usuario.s_Actual.ID:0 ,Permiso.UsuarioBaja)){
                            <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(u)">Eliminar</button>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    @if(servicioAutorizacion.PoseeElPermiso(Usuario.s_Actual != null? Usuario.s_Actual.ID:0 ,Permiso.UsuarioAlta)){
       <button class="btn btn-primary" @onclick="Agregar">Agregar Usuario</button>
    }
    <EditarUsuario @ref="editar" OnUsuarioAgregado="RefrescarLista" />
</div>
@code {
    List<Usuario> _lista=new List<Usuario>();
    protected override void OnInitialized()
    {
        _lista=ListarUsuariosUseCase.Ejecutar(1);
    }
    EditarUsuario editar=null!;
    EliminarEntidad eliminar=null!;
    EditarPermisos editarPermisos = null!;
    Usuario? UserElim {get;set;}
    string msg {get;set;} = "";
    public void Agregar()
    {
        editar.Mostrar(true);
        StateHasChanged();
    }
    public void MostrarPermisos(Usuario u){
        editarPermisos.Mostrar(true, u.ID);
        StateHasChanged();
    }   
    public void Editar(Usuario u)
    {
        editar.Mostrar(false,u);
        StateHasChanged();
    }
    public void ConfirmarEliminacion(Usuario u)
    {
        msg =$"¿Desea eliminar al usuario {u.Nombre} {u.Apellido}?";
        UserElim = u;
        eliminar.Mostrar(false);
    }
    private void Eliminar(Usuario u)
    {
        try
        {
            EliminarUsuarioUseCase.Ejecutar(Convert.ToInt32(u.ID),Usuario.s_Actual != null? Usuario.s_Actual.ID:0);
        }
        catch(FalloAutorizacionException e)
        {
            msg=e.Message;
            eliminar.Mostrar(true);
        }
        catch(Exception e)
        {
            msg=e.Message;
            eliminar.Mostrar(true);
        }
        _lista = ListarUsuariosUseCase.Ejecutar(Usuario.s_Actual != null? Usuario.s_Actual.ID:0);
    }
    void RefrescarLista()
    {
    _lista = ListarUsuariosUseCase.Ejecutar(Usuario.s_Actual != null? Usuario.s_Actual.ID:0);
    StateHasChanged();
    }
}